name: test-releaser

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of this release."
        required: true
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    types: [closed]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-env name=GITHUB_EVENT_NAME::push"
      - run: printenv
      #  with:
      #    ref: release/v${{ github.event.inputs.version }}
      # - name: run-component-builds
      #   uses: ./.github/actions/build-environment
      #   with:
      #     build_args: --make --force --version=${{ steps.get-latest-version.outputs.latest_version }}
      # - name: run-linting-and-style-checks
      #   uses: ./.github/actions/build-environment
      #   with:
      #     build_args: --check --force --version=${{ steps.get-latest-version.outputs.latest_version }}
      # - name: run-component-tests
      #   uses: ./.github/actions/build-environment
      #   with:
      #     build_args: --test --force --version=${{ steps.get-latest-version.outputs.latest_version }}
      # - name: release-components
      #   uses: ./.github/actions/build-environment
      #   with:
      #     build_args: --release --force --version=${{ steps.get-latest-version.outputs.latest_version }}
      #     pypi_token: ${{ secrets.PYPI_TOKEN }}
      #     pypi_repository: ${{ secrets.PYPI_REPOSITORY }}
      #     container_registry_url: ${{ secrets.CONTAINER_REGISTRY_URL }}
      #     container_registry_username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
      #     container_registry_password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      # - name: update-repository
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_user_name: Github Actions
      #     commit_user_email: actions@github.com
      #     commit_message: Apply automatic release changes
      #     tagging_message: v${{ steps.get-latest-version.outputs.latest_version }}
      - name: create-release-draft
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # create-release-draft:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: get-latest-version
  #       id: get-latest-version
  #       uses: ./.github/actions/get-latest-version
  #       with:
  #         current_commit_only: false
  #     - name: create-release-draft
  #       uses: release-drafter/release-drafter@v5
  #       with:
  #         version: ${{ steps.get-latest-version.outputs.latest_version }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # optional: upload release assets via actions/upload-release-asset@v1
